import React from "react";

import logo from "./logo.svg";
import "./App.css";
import FileBlock from "./FileBlock";
import FileBlockRunning from "./FileBlockRunning";
import FileBlockStage from "./FileBlockStage";
import axios from "axios";
import { useEffect, useState } from "react";

function App() {
  const [data, setData] = useState([]);
  const [dataSignature, setDataSignature] = useState([]);
  const [dataAnomaly, setDataAnomaly] = useState([]);
  const [dataIncomplete, setDataIncomplete] = useState([]);

  const getData = () => {
    axios
      .get("http://localhost:8080/completed")
      .then((msg) => {
        setData(msg.data);
      })
      .catch((err) => {
        console.log(err);
      });

    axios
      .get("http://localhost:8080/signature")
      .then((msg) => {
        setDataSignature(msg.data);
      })
      .catch((err) => {
        console.log(err);
      });

    axios
      .get("http://localhost:8080/anomaly")
      .then((msg) => {
        setDataAnomaly(msg.data);
      })
      .catch((err) => {
        console.log(err);
      });

    axios
      .get("http://localhost:8080/sandbox")
      .then((msg) => {
        setDataIncomplete(msg.data);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  useEffect(() => {
    getData();
  });

  return (
    <div className="App" style={{ margin: "20px" }}>
      <h1>Signature Checked</h1>
      {dataSignature.length != 0 ? (
        dataSignature.map((item) => {
          return (
            <div style={{ marginBottom: "20px" }}>
              <FileBlockStage
                stage={item.stage}
                date_created={item.date_created}
                file_name={item.file_name}
              />
            </div>
          );
        })
      ) : (
        <p>No file in progress</p>
      )}
      <h1>Anomaly Checked</h1>
      {dataAnomaly.length != 0 ? (
        dataAnomaly.map((item) => {
          return (
            <div style={{ marginBottom: "20px" }}>
              <FileBlockStage
                stage={item.stage}
                date_created={item.date_created}
                file_name={item.file_name}
              />
            </div>
          );
        })
      ) : (
        <p>No file in progress</p>
      )}
      <h1>Sandbox Running</h1>
      {dataIncomplete.length != 0 ? (
        dataIncomplete.map((item) => {
          return (
            <div style={{ marginBottom: "20px" }}>
              <FileBlockRunning
                job_id={item.job_id}
                status={item.state}
                file_name={item.file_name}
              />
            </div>
          );
        })
      ) : (
        <p>No file in progress</p>
      )}
      <h1>Completed</h1>
      {data.length != 0 ? (
        data.map((item) => {
          return (
            <div style={{ marginBottom: "20px" }}>
              <FileBlock
                job_id={item.job_id}
                status={item.state}
                file_name={item.file_name}
                verdict={item.verdict}
              />
            </div>
          );
        })
      ) : (
        <p>No completed data</p>
      )}
    </div>
  );
}

export default App;
